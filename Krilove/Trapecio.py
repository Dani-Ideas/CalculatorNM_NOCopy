import tkinter as tk
from tkinter import messagebox
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import sympy as sp

def metodo_trapecio(funcion, a, b, n):
    """Calcula la integral usando el m칠todo del trapecio"""
    x = sp.symbols('x')
    f = sp.lambdify(x, funcion, 'numpy')
    
    h = (b - a) / n
    x_vals = np.linspace(a, b, n + 1)
    y_vals = f(x_vals)
    area = (h / 2) * (y_vals[0] + 2 * sum(y_vals[1:-1]) + y_vals[-1])
    
    return area, x_vals, y_vals

def calcular():
    try:
        funcion = entry_funcion.get()
        a = float(entry_a.get())
        b = float(entry_b.get())
        n = int(entry_n.get())
        
        x = sp.symbols('x')
        area, x_vals, y_vals = metodo_trapecio(funcion, a, b, n)
        
        resultado_label.config(text=f"츼rea aproximada: {area:.6f}")
        
        # Graficar la funci칩n y la aproximaci칩n
        fig, ax = plt.subplots()
        ax.plot(x_vals, y_vals, 'b-', label=f"f(x) = {funcion}")
        ax.fill_between(x_vals, y_vals, alpha=0.3, color='lightblue', label="츼rea aproximada")
        ax.set_xlabel("x")
        ax.set_ylabel("f(x)")
        ax.set_title("Aproximaci칩n del 츼rea usando el M칠todo del Trapecio")
        ax.legend()
        
        # Integrar matplotlib con Tkinter
        canvas = FigureCanvasTkAgg(fig, master=frame_grafico)
        canvas.draw()
        canvas.get_tk_widget().pack()
        
    except Exception as e:
        messagebox.showerror("Error", f"Error en la entrada: {e}")

# Interfaz gr치fica
root = tk.Tk()
root.title("M칠todo del Trapecio para Integraci칩n")

# Entradas para los par치metros
tk.Label(root, text="Funci칩n f(x) (en t칠rminos de x):").pack()
entry_funcion = tk.Entry(root, width=40)
entry_funcion.pack()

tk.Label(root, text="L칤mite inferior (a):").pack()
entry_a = tk.Entry(root, width=20)
entry_a.pack()

tk.Label(root, text="L칤mite superior (b):").pack()
entry_b = tk.Entry(root, width=20)
entry_b.pack()

tk.Label(root, text="N칰mero de subintervalos (n):").pack()
entry_n = tk.Entry(root, width=20)
entry_n.pack()

# Bot칩n para calcular el 치rea
calcular_btn = tk.Button(root, text="Calcular 츼rea", command=calcular)
calcular_btn.pack()

# Etiqueta para mostrar el resultado
resultado_label = tk.Label(root, text="")
resultado_label.pack()

# Marco para el gr치fico
frame_grafico = tk.Frame(root)
frame_grafico.pack()

root.mainloop()

""" 
Instrucciones de uso
Ejecuta el programa.
En la interfaz, ingresa la funci칩n en t칠rminos de x (por ejemplo, x**2 + 3), los l칤mites a y b, y el n칰mero de subintervalos n.
Presiona "Calcular 츼rea" para ver la aproximaci칩n del 치rea y la gr치fica.
L칤mite inferior 
洧녩
a: Este es el valor donde comienza el intervalo de integraci칩n. Por ejemplo, si est치s integrando desde 
洧논
=
0
x=0, pon 0 en 
洧녩
a.

L칤mite superior 
洧녪
b: Este es el valor donde termina el intervalo de integraci칩n. Por ejemplo, si quieres integrar hasta 
洧논
=
2
x=2, pon 2 en 
洧녪
b.

N칰mero de subintervalos 
洧녵
n: Define la cantidad de subdivisiones del intervalo 
[
洧녩
,
洧녪
]
[a,b] para el m칠todo del trapecio. Un n칰mero m치s alto de subintervalos generalmente mejora la precisi칩n. Puedes empezar con un valor como 10 y probar aumentando este n칰mero para ver c칩mo var칤a el resultado.
Este programa te permitir치 visualizar y entender c칩mo se aproxima el 치rea bajo la curva usando el m칠todo del trapecio. """